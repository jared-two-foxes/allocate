
prebuilt_cxx_library(
  name = 'Catch2',
  header_only = True,
  header_dirs = [
    'Catch2/include'
  ],
  visibility = [
    'PUBLIC',
  ],
)


cxx_library(
    name = 'SQLite3',
    header_namespace = '',
    exported_headers = subdir_glob([
        ('SQLiteCpp/sqlite3','*.h'),
    ]),
    srcs = glob([
        'SQLiteCpp/sqlite3/*.c',
    ]),
    compiler_flags=[
        '-DSQLITE_ENABLE_COLUMN_METADATA',
        '-DSQLITE_THREADSAFE=0',
        '-DSQLITE_OMIT_LOAD_EXTENSION',
    ],
)


prebuilt_cxx_library(
  name = 'cppzmq',
  header_only = True,
  header_namespace = '',
  exported_headers  = subdir_glob([     # public include files
    ('cppzmq', '**/*.hpp'),             # those will be exported,
  ]),
  exported_deps = [
    '//externals:libzmq'
  ],
  visibility = [
    'PUBLIC',
  ]
)


cxx_library(
    name = 'SQLiteCpp',
    header_namespace = 'SQLiteCpp',
    exported_headers = subdir_glob([
        ('SQLiteCpp/include/SQLiteCpp','**/*.h'),
    ]),
    srcs = glob([
        'SQLiteCpp/src/*.cpp',
    ]),
    deps = [
        ':SQLite3'
    ],
    compiler_flags=[
        '-DSQLITE_OMIT_LOAD_EXTENSION',
    ],
    visibility = [
        'PUBLIC',
    ],
)


cxx_library(
  name = 'libzmq',
  header_namespace = '',
  exported_headers = subdir_glob([
    ('libzmq/include', '*.h'),
  ]),
  headers = subdir_glob([
    ('libzmq/src', '*.hpp'),
  ]),
  srcs = glob([
    'libzmq/src/*.cpp',
  ]),
  exported_preprocessor_flags = [
    '/DWIN32',
    '/D_DEBUG'
    '/D_WINDOWS',
    '/DZMQ_STATIC',
    '/DZMQ_BUILD_DRAFT_API',
    '/D_REENTRANT',
    '/D_THREAD_SAFE',
    '/DZMQ_CUSTOM_PLATFORM_HPP',
    '/DFD_SETSIZE=16384',
    '/D_CRT_SECURE_NO_WARNINGS',
    '/D_WINSOCK_DEPRECATED_NO_WARNINGS',
  ],
  exported_linker_flags = [
    'ws2_32.lib',
    'rpcrt4.lib',
    'iphlpapi.lib',
  ],
  compiler_flags = [
    '/EHsc'
  ],
  visibility = [
    'PUBLIC',
  ],
)
